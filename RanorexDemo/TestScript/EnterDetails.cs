///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace RanorexDemo.TestScript
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EnterDetails recording.
    /// </summary>
    [TestModule("4c737580-697e-46f5-854f-2158a45ae08b", ModuleType.Recording, 1)]
    public partial class EnterDetails : ITestModule
    {
        /// <summary>
        /// Holds an instance of the RanorexDemo.RanorexDemoRepository repository.
        /// </summary>
        public static RanorexDemo.RanorexDemoRepository repo = RanorexDemo.RanorexDemoRepository.Instance;

        static EnterDetails instance = new EnterDetails();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EnterDetails()
        {
            strUserName = "";
            strConfirmationNo = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EnterDetails Instance
        {
            get { return instance; }
        }

#region Variables

        string _strUserName;

        /// <summary>
        /// Gets or sets the value of variable strUserName.
        /// </summary>
        [TestVariable("51ed26ad-8ea2-4f47-83d5-aac4202b2e04")]
        public string strUserName
        {
            get { return _strUserName; }
            set { _strUserName = value; }
        }

        string _strConfirmationNo;

        /// <summary>
        /// Gets or sets the value of variable strConfirmationNo.
        /// </summary>
        [TestVariable("530b4434-4fda-441f-abfb-3bb552c99c79")]
        public string strConfirmationNo
        {
            get { return _strConfirmationNo; }
            set { _strConfirmationNo = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MercuryFlight.BookAFlight.TripType' at 6;7.", repo.MercuryFlight.BookAFlight.TripTypeInfo, new RecordItemIndex(0));
            repo.MercuryFlight.BookAFlight.TripType.Click("6;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute TagValue to '2' on item 'MercuryFlight.BookAFlight.PassCount'.", repo.MercuryFlight.BookAFlight.PassCountInfo, new RecordItemIndex(1));
            repo.MercuryFlight.BookAFlight.PassCount.Element.SetAttributeValue("TagValue", "2");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute TagValue to 'Frankfurt' on item 'MercuryFlight.BookAFlight.ToPort'.", repo.MercuryFlight.BookAFlight.ToPortInfo, new RecordItemIndex(2));
            repo.MercuryFlight.BookAFlight.ToPort.Element.SetAttributeValue("TagValue", "Frankfurt");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'MercuryFlight.BookAFlight.ToPort' and assigning its value to variable 'strUserName'.", repo.MercuryFlight.BookAFlight.ToPortInfo, new RecordItemIndex(3));
            strUserName = repo.MercuryFlight.BookAFlight.ToPort.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MercuryFlight.BookAFlight.BusinessClass' at Center.", repo.MercuryFlight.BookAFlight.BusinessClassInfo, new RecordItemIndex(4));
            repo.MercuryFlight.BookAFlight.BusinessClass.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MercuryFlight.FlightConfirmation.FindFlights' at Center.", repo.MercuryFlight.FlightConfirmation.FindFlightsInfo, new RecordItemIndex(5));
            repo.MercuryFlight.FlightConfirmation.FindFlights.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(6));
            Delay.Duration(3000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
